services:
  # Raw Neo4j service
  neo4j:
    image: neo4j:5.13.0
    ports:
      - "7474:7474"
      - "7473:7473"
      - "7687:7687"
    environment:
      - NEO4J_AUTH=${SNOMED_NEO4J_USER}/${SNOMED_NEO4J_PASSWORD}
      - NEO4J_PLUGINS=["apoc"]
      - NEO4J_server_memory_heap_initial__size=1G
      - NEO4J_server_memory_heap_max__size=1G
      - NEO4J_server_memory_pagecache_size=2G
    volumes:
      - ./data/neo4j_data:/data
      - ./data/neo4j_plugins:/plugins
    healthcheck:
      test:
        ["CMD", "cypher-shell", "-u", "neo4j", "-p", "neo4jneo4j", "RETURN 1"]
      interval: 10s
      timeout: 10s
      retries: 20
    networks:
      - snomed-network

  # SNOMED data importer
  snomed-importer:
    build:
      context: .
      dockerfile: Dockerfile.importer
    environment:
      - SNOMED_NEO4J_HOST=${SNOMED_NEO4J_HOST}
      - SNOMED_NEO4J_USER=${SNOMED_NEO4J_USER}
      - SNOMED_NEO4J_PASSWORD=${SNOMED_NEO4J_PASSWORD}
      - SNOMED_API_KEY=${SNOMED_API_KEY}
      - SNOMED_DIR=${SNOMED_DIR}
      - SNOMED_IMPORT_BATCH=${SNOMED_IMPORT_BATCH}
      - SNOMED_KEEP_INACTIVE=${SNOMED_KEEP_INACTIVE}
      - SNOMED_SLIM_HIERARCHIES=${SNOMED_SLIM_HIERARCHIES}
      - SNOMED_SLIM_RELATIONSHIPS=${SNOMED_SLIM_RELATIONSHIPS}
      - SNOMED_SLIM_MAX_DEPTHS=${SNOMED_SLIM_MAX_DEPTH}
      - SNOMED_SLIM_DRY_RUN=${SNOMED_SLIM_DRY_RUN}
      - SNOMED_SLIM_SOFT_DELETE=${SNOMED_SLIM_SOFT_DELETE}
    volumes:
      - ./data/snomed:/mnt/snomed
    depends_on:
      neo4j:
        condition: service_healthy
    networks:
      - snomed-network

networks:
  snomed-network:
